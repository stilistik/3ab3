load_module /etc/nginx/modules/ngx_http_image_filter_module.so;
user nobody nogroup;
worker_processes auto; # auto-detect number of logical CPU cores

events {
  worker_connections 512; # set the max number of simultaneous connections (per worker process)
}


http {

  include /etc/nginx/mime.types;

  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  # Cache settings
  proxy_cache_path /tmp/nginx-images-cache/ levels=1:2 keys_zone=images:10m inactive=24h max_size=100m;

  ##############################################################
  #*********************** CDN SERVER *************************#
  ##############################################################

  # Internal image resizing server.
  server {
    listen 8888;

    # resizing location
    location ~ "^/cdn/(?<image>.+)@(?<width>[0-9]*)$" {
      alias /usr/src/app/storage/$image;
      image_filter resize $width -;
      image_filter_jpeg_quality 80;
      image_filter_buffer 8M;
    }

    # pass through location
    location /cdn {
      alias /usr/src/app/storage;
    }
  }

  ##############################################################
  #*********************** API SERVER *************************#
  ##############################################################
  server {
    listen 4000 ssl http2;
    add_header Strict-Transport-Security "max-age=31536000" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;

    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 10m;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5;";

    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4;

    ssl_certificate /etc/letsencrypt/live/newmember.3ab3.ch/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/newmember.3ab3.ch/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/newmember.3ab3.ch/chain.pem;

    client_max_body_size 256M;

    location /cdn {
      add_header Access-Control-Allow-Origin *;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_pass http://proxy:8888/cdn/;
      proxy_cache images;
      proxy_cache_valid 200 24h;
    }

    location /auth/session {
      proxy_pass http://api:4000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Original-URI $request_uri;
      proxy_set_header X-Original-METHOD $request_method;
      proxy_cache_bypass $http_upgrade;
    }

    location /auth/request {
      proxy_pass http://api:4000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Original-URI $request_uri;
      proxy_set_header X-Original-METHOD $request_method;
      proxy_cache_bypass $http_upgrade;
    }

    location /auth/login {
      proxy_pass http://api:4000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Original-URI $request_uri;
      proxy_set_header X-Original-METHOD $request_method;
      proxy_cache_bypass $http_upgrade;
    }

    location /auth/token {
      proxy_pass http://api:4000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Original-URI $request_uri;
      proxy_set_header X-Original-METHOD $request_method;
      proxy_cache_bypass $http_upgrade;
    }

    location /api {
      proxy_pass http://api:4000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /graphql {
      proxy_pass http://api:4000/graphql;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
    }
  }

  ##################################################################
  #*********************** WEBSITE SERVER *************************#
  ##################################################################

  # Redirect all non-encrypted to encrypted
  server {
    server_name newpage.3ab3.ch www.newpage.3ab3.ch;
    listen 80;
    listen [::]:80;
    charset utf-8;

    location / {
      rewrite ^ https://$host$request_uri? permanent;
    }

    location ^~ /.well-known {
      allow all;
      root /data/letsencrypt/;
    }
  }

  # Website server
  server {
    server_name newpage.3ab3.ch www.newpage.3ab3.ch;
    listen 443;
    charset utf-8;
    ssl on;

    add_header Strict-Transport-Security "max-age=31536000" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;

    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 10m;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5;";

    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4;

    ssl_certificate /etc/letsencrypt/live/newpage.3ab3.ch/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/newpage.3ab3.ch/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/newpage.3ab3.ch/chain.pem;

    client_max_body_size 256M;
    location / {
      proxy_pass http://website:3000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
  }


  #################################################################
  #*********************** MEMBER SERVER *************************#
  #################################################################
  # Redirect all non-encrypted to encrypted
  server {
    server_name newmember.3ab3.ch www.newmember.3ab3.ch;
    listen 80;
    listen [::]:80;
    charset utf-8;

    location / {
      rewrite ^ https://$host$request_uri? permanent;
    }

    location ^~ /.well-known {
      allow all;
      root /data/letsencrypt/;
    }
  }

  # Member server
  server {
    server_name newmember.3ab3.ch www.newmember.3ab3.ch;
    listen 443;
    charset utf-8;
    ssl on;

    add_header Strict-Transport-Security "max-age=31536000" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;

    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 10m;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5;";

    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4;

    ssl_certificate /etc/letsencrypt/live/newmember.3ab3.ch/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/newmember.3ab3.ch/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/newmember.3ab3.ch/chain.pem;

    client_max_body_size 256M;

    location / {
      proxy_pass http://member:3001;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /prisma {
      proxy_pass http://prisma:4466;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
  }
}
