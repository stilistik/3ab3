type ConsumedItem {
  id: ID!
  item: Item!
  consumer: User!
  checklist: Checklist!
  amount: Int!
  price: Float!
}

input ConsumedItemInput {
  itemId: ID!
  userId: ID!
  checklistId: ID!
  amount: Int!
}

extend type Query {
  consumedItems: [ConsumedItem!]!
  consumedItem(consumedItemId: ID!): ConsumedItem!
  userConsumed(userId: ID!): [ConsumedItem!]!
  checklistConsumed(checklistId: ID!): [ConsumedItem!]!
  userChecklistConsumed(userId: ID!, checklistId: ID!): [ConsumedItem!]!
}

extend type Mutation {
  createConsumedItem(input: ConsumedItemInput!): ConsumedItem!
  updateConsumedItem(consumedItemId: ID!, input: ConsumedItemInput!): ConsumedItem!
  deleteConsumedItem(consumedItemId: ID!): ConsumedItem!
}
