type Chat implements Node {
  id: ID!
  title: String!
  creator: User!
  members: [User!]!
  messages(first: Int!, skip: Int, after: String): MessageConnection!
  lastMessage: Message
  lastSeen: JSON
  usersTyping: JSON
}

type ChatEdge implements Edge {
  cursor: String!
  node: Chat
}

type ChatsConnection implements Connection {
  pageInfo: PageInfo!
  edges: [ChatEdge]
}

input ChatInput {
  title: String!
  creatorId: ID!
  memberIds: [ID!]!
}

extend type Query {
  chats(first: Int!, after: String, skip: Int): ChatsConnection!
  unreadMessagesCount(userId: ID!, chatId: ID!): Int!
}

extend type Mutation {
  createChat(input: ChatInput!): Chat!
  userLastSeen(userId: ID!, chatId: ID!): Chat!
}
