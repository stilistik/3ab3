type Product @isAuthenticated {
  id: ID!
  name: String!
  price: Float!
  index: Int!
  thumbnail: String
  deleted: Boolean!
}

type ProductConsumption {
  count: Int!
  product: Product!
}

input ProductInput {
  name: String!
  price: Float!
  index: Int!
  image: Upload
  deleted: Boolean
}

extend type Query {
  products: [Product!]!
  currentProducts: [Product!]!
  product(productId: ID!): Product!
  consumption(productId: ID!): ProductConsumption!
  consumptions: [ProductConsumption]!
}

extend type Mutation {
  createProduct(input: ProductInput!): Product! @hasRole
  updateProduct(productId: ID!, input: ProductInput!): Product! @hasRole
  deleteProduct(productId: ID!): Product! @hasRole
}
