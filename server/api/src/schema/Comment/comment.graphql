type Comment @isAuthenticated {
  id: ID!
  text: String!
  author: User!
  likedBy: [User!]!
  date: DateTime!
  post: Post!
}

input CommentInput {
  postId: ID!
  userId: ID!
  text: String!
}

extend type Query {
  comments: [Comment!]!
  comment(commentId: ID!): Comment!
}

extend type Mutation {
  createComment(input: CommentInput!): Comment!
  likeComment(userId: ID!, commentId: ID!): Comment!
  unlikeComment(userId: ID!, commentId: ID!): Comment!
  deleteComment(commentId: ID!): Comment!
}
