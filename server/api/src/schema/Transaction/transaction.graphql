type Transaction implements Node {
  id: ID!
  user: User!
  date: DateTime!
  balance: Float!
  type: TransactionType!
  purchase: Purchase
  payment: Payment
}

type TransactionEdge implements Edge {
  cursor: String!
  node: Transaction
}

type TransactionConnection implements Connection {
  count: Int!
  pageInfo: PageInfo!
  edges: [TransactionEdge]
}

enum TransactionType {
  PAYMENT,
  PURCHASE
}

extend type Query {
  transaction(transactionId: ID!): Transaction!
  transactions(type: TransactionType, first: Int!, skip: Int, after: String): TransactionConnection
}
