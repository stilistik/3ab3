type Transaction implements Node {
  id: ID!
  user: User!
  date: DateTime!
  change: Float!
  type: TransactionType!
  purchase: Purchase
  payment: Payment
  debt: Debt
  debt: Debt
}

type TransactionEdge implements Edge {
  cursor: String!
  node: Transaction
}

type TransactionConnection implements Connection {
  pageInfo: PageInfo!
  edges: [TransactionEdge]
}

enum TransactionType {
  PAYMENT
  PURCHASE
  DEBT
}

extend type Query {
  transaction(transactionId: ID!): Transaction!
  transactions(
    type: TransactionType
    where: JSON
    orderBy: String
    first: Int!
    skip: Int
    after: String
  ): TransactionConnection
}

extend type Mutation {
  deleteTransaction(transactionId: ID!): Transaction! @hasRole
}
